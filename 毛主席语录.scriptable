{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "teal",
    "glyph" : "child"
  },
  "name" : "毛主席语录",
  "script" : "\/********************************************************\n ************* MAKE SURE TO COPY EVERYTHING *************\n *******************************************************\n ************ © 2024 Copyright Nicolas-kings ************\/\n\/********************************************************\n * script     : ONE-Quotations.js\n * version    : 1.0.0\n * author     : Nicolas-kings\n * date       : 2024-06-29\n * desc       : 具体配置说明，详见微信公众号-曰(读yue)坛\n * github     : https:\/\/github.com\/Nicolasking007\/Scriptable\n * Changelog  : v1.0.0 - 首次发布               \n----------------------------------------------- *\/\n\/\/ \/\/##############公共参数配置模块##############\n\/\/ 选择true时，使用透明背景\nconst changePicBg = true;\n\/\/ 选择true时，使用必应壁纸\nconst ImageMode = false;\n\/\/ 预览大小  small\/medium\/large\nconst previewSize = config.runsInWidget ? config.widgetFamily : \"medium\";\n\/\/ 是否使用纯色背景\nconst colorMode = false;\n\/\/ 小组件背景色\nconst bgColor = new Color(\"000000\");\n\/\/ 高斯样式：light\/dark\nconst blurStyle = \"light\";\n\/\/ 模糊程度 参数范围 1~150\nconst blursize = 100;\n\/\/ 1: 图片加蒙板 2: 自建图库  3: 用Bing 壁纸\nconst Imgstyle = 2;\n\/\/ 右下角是否显示图像\nconst SFSymbolmodel = false;\n\/\/ 左上角logo\nconst alogourl =\n  \"https:\/\/pic.rmb.bdstatic.com\/bjh\/d34fa23b66c3d72147b774e301cdf035.png\"; \/\/logo图片\n\/\/ 用户头像\nconst avatar =\n  \"https:\/\/pic.rmb.bdstatic.com\/bjh\/b024ead24a7bab77e1e2f143db1fd6e4.png\";\n\/\/ 右下角logo\nconst corner =\n  \"https:\/\/pic.rmb.bdstatic.com\/bjh\/f0f595d8ceaa5cb6cc6c4e684c8b87b9.jpeg\";\n\/\/ 适配浅色、深色模式内容字体颜色\nconst themes_Fontcolor = Color.dynamic(Color.black(), Color.white());\n\/\/ 适配浅色、深色模式内容字体颜色\nconst themes_Maincolor = Color.dynamic(Color.white(), Color.black());\n\/\/ 小尺寸设置边距(上，左，下，右)\nconst padding = { top: 10, left: 10, bottom: 10, right: 10 };\n\n\/\/ \/\/⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈\n\/\/ \/\/##############用户自定义参数配置模块-结束##############\nconst filename = `${Script.name()}`;\nconst files = FileManager.local();\nconst path = files.joinPath(files.documentsDirectory(), filename);\nconst localversion = \"1.0.0\";\nconst versionData = await getversion();\nconst needUpdated = await updateCheck(localversion);\nconst QuotationsData = await getData();\nconst widget = await createWidget();\n\n\/\/#####################背景模块-START#####################\n\nif (!colorMode && !ImageMode && !config.runsInWidget && changePicBg) {\n  const okTips = \"您的小部件背景已准备就绪\";\n  let message =\n    \"开始之前，请回到主屏幕并进入编辑模式。 滑到最右边的空白页并截图。\";\n  let options = [\"图片选择\", \"透明背景\", \"配置文档\", \"取消\"];\n  let response = await generateAlert(message, options);\n  if (response == 3) return;\n  if (response == 0) {\n    let img = await Photos.fromLibrary();\n    message = okTips;\n    const resultOptions = [\"好的\"];\n    await generateAlert(message, resultOptions);\n    files.writeImage(path, img);\n  }\n  if (response == 2) {\n    Safari.openInApp(versionData[\"ONE-oilprice\"].wxurl, false);\n  }\n  if (response == 1) {\n    message =\n      \"以下是【透明背景】生成步骤，如果你没有屏幕截图请退出，并返回主屏幕长按进入编辑模式。滑动到最右边的空白页截图。然后重新运行！\";\n    let exitOptions = [\"继续(已有截图)\", \"退出(没有截图)\"];\n\n    let shouldExit = await generateAlert(message, exitOptions);\n    if (shouldExit) return;\n\n    \/\/ Get screenshot and determine phone size.\n    let img = await Photos.fromLibrary();\n    let height = img.size.height;\n    let phone = phoneSizes()[height];\n    if (!phone) {\n      message =\n        \"您似乎选择了非iPhone屏幕截图的图像，或者不支持您的iPhone。请使用其他图像再试一次!\";\n      await generateAlert(message, [\"好的！我现在去截图\"]);\n      return;\n    }\n    if (height == 2436) {\n      let files = FileManager.local();\n      let cacheName = \"nk-phone-type\";\n      let cachePath = files.joinPath(files.libraryDirectory(), cacheName);\n      if (files.fileExists(cachePath)) {\n        let typeString = files.readString(cachePath);\n        phone = phone[typeString];\n      } else {\n        message = \"你使用什么型号的iPhone？\";\n        let types = [\"iPhone 12 mini\", \"iPhone 11 Pro, XS, or X\"];\n        let typeIndex = await generateAlert(message, types);\n        let type = typeIndex == 0 ? \"mini\" : \"x\";\n        phone = phone[type];\n        files.writeString(cachePath, type);\n      }\n    }\n    \/\/ Prompt for widget size and position.\n    message = \"您想要创建什么尺寸的小部件？\";\n    let sizes = [\"小号\", \"中号\", \"大号\"];\n    let size = await generateAlert(message, sizes);\n    let widgetSize = sizes[size];\n\n    message = \"您想它在什么位置？\";\n    message +=\n      height == 1136\n        ? \" (请注意，您的设备仅支持两行小部件，因此中间和底部选项相同。)\"\n        : \"\";\n\n    \/\/ Determine image crop based on phone size.\n    let crop = {\n      w: \"\",\n      h: \"\",\n      x: \"\",\n      y: \"\",\n    };\n    if (widgetSize == \"小号\") {\n      crop.w = phone.小号;\n      crop.h = phone.小号;\n      let positions = [\n        \"顶部 左边\",\n        \"顶部 右边\",\n        \"中间 左边\",\n        \"中间 右边\",\n        \"底部 左边\",\n        \"底部 右边\",\n      ];\n      let position = await generateAlert(message, positions);\n\n      \/\/ Convert the two words into two keys for the phone size dictionary.\n      let keys = positions[position].split(\" \");\n      crop.y = phone[keys[0]];\n      crop.x = phone[keys[1]];\n    } else if (widgetSize == \"中号\") {\n      crop.w = phone.中号;\n      crop.h = phone.小号;\n\n      \/\/ 中号 and 大号 widgets have a fixed x-value.\n      crop.x = phone.左边;\n      let positions = [\"顶部\", \"中间\", \"底部\"];\n      let position = await generateAlert(message, positions);\n      let key = positions[position].toLowerCase();\n      crop.y = phone[key];\n    } else if (widgetSize == \"大号\") {\n      crop.w = phone.中号;\n      crop.h = phone.大号;\n      crop.x = phone.左边;\n      let positions = [\"顶部\", \"底部\"];\n      let position = await generateAlert(message, positions);\n\n      \/\/ 大号 widgets at the 底部 have the \"中间\" y-value.\n      crop.y = position ? phone.中间 : phone.顶部;\n    }\n\n    \/\/ Crop image and finalize the widget.\n    let imgCrop = cropImage(img, new Rect(crop.x, crop.y, crop.w, crop.h));\n\n    message = \"您的小部件背景已准备就绪，退出到桌面预览。\";\n    const resultOptions = [\"导出到相册\", \"预览组件\"];\n    const exportToFiles = await generateAlert(message, resultOptions);\n    if (exportToFiles) {\n      files.writeImage(path, imgCrop);\n    } else {\n      Photos.save(imgCrop);\n    }\n  }\n}\n\n\/\/#####################背景模块-设置小组件的背景#####################\n\nif (colorMode) {\n  widget.backgroundColor = bgColor;\n} else if (ImageMode) {\n  switch (Imgstyle) {\n    case 1:\n      const blugImgs = await getImageByUrl(\n        \"https:\/\/source.unsplash.com\/random\/800x373?\" + IMAGE_SEARCH_TERMS,\n        `_${Script.name()}-bg`,\n        false\n      );\n      bgImg = await blurImage(blugImgs, blurStyle, blursize);\n      widget.backgroundImage = bgImg;\n      break;\n    case 2:\n      const unsplashurl =\n        \"https:\/\/source.unsplash.com\/random\/800x373?\" + IMAGE_SEARCH_TERMS;\n      const orginImgs = await getImageByUrl(\n        unsplashurl,\n        `_${Script.name()}-orginImgs-bg`,\n        false\n      );\n      bgImg = await shadowImage(orginImgs);\n      widget.backgroundImage = bgImg;\n      break;\n    case 3:\n      const bingurl = \"https:\/\/api.dujin.org\/bing\/1366.php\";\n      const bingImgs = await getImageByUrl(\n        bingurl,\n        `_${Script.name()}-bingImgs-bg`,\n        false\n      );\n      bgImg = await shadowImage(bingImgs);\n      widget.backgroundImage = bgImg;\n      break;\n  }\n} else {\n  widget.backgroundImage = files.readImage(path);\n}\n\/\/ 设置边距(上，左，下，右)\nwidget.setPadding(padding.top, padding.left, padding.bottom, padding.right);\n\nif (!config.runsInWidget) {\n  switch (previewSize) {\n    case \"small\":\n      await widget.presentSmall();\n      break;\n    case \"medium\":\n      await widget.presentMedium();\n      break;\n    case \"large\":\n      await widget.presentLarge();\n      break;\n  }\n}\nScript.setWidget(widget);\n\/\/ 完成脚本\nScript.complete();\n\n\/\/#####################内容模块-创建小组件内容#####################\n\nasync function createWidget() {\n  let w = new ListWidget();\n  const timeFormatter = new DateFormatter();\n  timeFormatter.locale = \"en\";\n  timeFormatter.useNoDateStyle();\n  timeFormatter.useShortTimeStyle();\n  switch (previewSize) {\n    case \"small\":\n      let SaLogos = await getImageByUrl(\n        alogourl,\n        `_${Script.name()}-avagrtop-bg1`,\n        false\n      );\n      let Salogo = w.addImage(SaLogos);\n      Salogo.imageSize = new Size(20, 20);\n      w.addSpacer();\n      let Sheading = w.addText(QuotationsData.content.text);\n      Sheading.font = Font.systemFont(16);\n      Sheading.textColor = themes_Fontcolor;\n      Sheading.centerAlignText();\n      Sheading.shadowColor = themes_Maincolor;\n      Sheading.minimumScaleFactor = 0.5;\n\n      w.addSpacer();\n\n      const SfooterStack = w.addStack();\n      SfooterStack.bottomAlignContent();\n\n      const SprofileStack = SfooterStack.addStack();\n      SprofileStack.topAlignContent();\n\n      const Simage = await getImageByUrl(\n        avatar,\n        `_${Script.name()}-avagr-bg`,\n        false\n      );\n      let SprofileImage = SprofileStack.addImage(Simage);\n\n      SprofileImage.imageSize = new Size(30, 30);\n      SprofileImage.cornerRadius = 15;\n      SprofileImage.borderWidth = 4;\n      SprofileImage.borderColor = new Color(\"#bfbfbf\");\n\n      SprofileStack.addSpacer(10);\n\n      const SnameStack = SprofileStack.addStack();\n      SnameStack.layoutVertically();\n\n      const Susername = SnameStack.addText(QuotationsData.title);\n      Susername.textColor = Color.red();\n      Susername.font = Font.lightSystemFont(12);\n      Susername.lineLimit = 1;\n      SnameStack.addSpacer(5);\n      const Staglist = SnameStack.addText(QuotationsData.desc);\n      Staglist.textColor = new Color(\"#bfbfbf\");\n      Staglist.font = Font.semiboldSystemFont(9);\n      Staglist.lineLimit = 1;\n      SfooterStack.addSpacer();\n      if (SFSymbolmodel) {\n        let SdocsSymbol = SFSymbol.named(\"figure.wave\"); \/\/tortoise.fill\n        let SdocsElement = SfooterStack.addImage(SdocsSymbol.image);\n        SdocsElement.imageSize = new Size(20, 20);\n        SdocsElement.tintColor = Color.dynamic(Color.red(), Color.white());\n      } else {\n        const SdevLogos = await getImageByUrl(\n          corner,\n          `_${Script.name()}-avagrtop-bg`,\n          false\n        );\n        const Slogo = SfooterStack.addImage(SdevLogos);\n        Slogo.imageSize = new Size(20, 20);\n      }\n      break;\n    case \"medium\":\n      let MaLogos = await getImageByUrl(\n        alogourl,\n        `_${Script.name()}-avagrtop-bg1`,\n        false\n      );\n      let Malogo = w.addImage(MaLogos);\n      Malogo.imageSize = new Size(20, 20);\n      w.addSpacer();\n      let Mheading = w.addText(QuotationsData.content.text);\n      Mheading.font = Font.systemFont(18);\n      Mheading.textColor = themes_Fontcolor;\n      Mheading.centerAlignText();\n      Mheading.shadowColor = themes_Maincolor;\n      Mheading.minimumScaleFactor = 0.5;\n\n      w.addSpacer();\n\n      const MfooterStack = w.addStack();\n      MfooterStack.bottomAlignContent();\n\n      const MprofileStack = MfooterStack.addStack();\n      MprofileStack.topAlignContent();\n\n      const Mimage = await getImageByUrl(\n        avatar,\n        `_${Script.name()}-avagr-bg`,\n        false\n      );\n      let MprofileImage = MprofileStack.addImage(Mimage);\n\n      MprofileImage.imageSize = new Size(40, 40);\n      MprofileImage.cornerRadius = 15;\n      MprofileImage.borderWidth = 4;\n      MprofileImage.borderColor = new Color(\"#bfbfbf\");\n      MprofileStack.addSpacer(10);\n\n      const MnameStack = MprofileStack.addStack();\n      MnameStack.layoutVertically();\n\n      const Musername = MnameStack.addText(QuotationsData.title);\n      Musername.textColor = Color.red();\n      Musername.centerAlignText();\n      Musername.font = Font.semiboldSystemFont(12);\n      Musername.lineLimit = 1;\n      MnameStack.addSpacer(5);\n      const Mtaglist = MnameStack.addText(QuotationsData.desc);\n      Mtaglist.textColor = new Color(\"#ffffff\");\n      Mtaglist.font = Font.semiboldSystemFont(9);\n      Mtaglist.lineLimit = 2;\n      MfooterStack.addSpacer();\n      if (SFSymbolmodel) {\n        let MdocsSymbol = SFSymbol.named(\"figure.wave\"); \/\/tortoise.fill\n        let MdocsElement = MfooterStack.addImage(MdocsSymbol.image);\n        MdocsElement.imageSize = new Size(20, 20);\n        MdocsElement.tintColor = Color.dynamic(Color.red(), Color.white());\n      } else {\n        const MdevLogos = await getImageByUrl(\n          corner,\n          `_${Script.name()}-avagrtop-bg`,\n          false\n        )\n        }\n      break;\n    case \"large\":\n      let LtitleStack = w.addStack()\n      let LaLogos = await getImageByUrl(\n        alogourl,\n        `_${Script.name()}-avagrtop-bg1`,\n        false\n      );\n      let Lalogo = LtitleStack.addImage(LaLogos);\n      Lalogo.imageSize = new Size(30, 30);\n      LtitleStack.addSpacer()\n\n\n      let LsubTitleStack = LtitleStack.addStack()\n      LsubTitleStack.backgroundColor = new Color(\"#FF0000\", 1)\n      LsubTitleStack.cornerRadius = 10\n      LsubTitleStack.setPadding(2, 6, 2, 6)\n\n      let LsubTitle = LsubTitleStack.addText(QuotationsData.topic)\n      LsubTitle.font = Font.systemFont(14)\n      LsubTitle.textColor = new Color(\"#FFD700\", 1)\n\n      LtitleStack.addSpacer(5)\n\n      let LsecondSubTitleStack = LtitleStack.addStack()\n      LsecondSubTitleStack.backgroundColor = new Color(\"#4B92DB\", 1)\n      LsecondSubTitleStack.cornerRadius = 10\n      LsecondSubTitleStack.setPadding(2, 6, 2, 6)\n\n      let LsecondSubTitle = LsecondSubTitleStack.addText(QuotationsData.peace)\n      LsecondSubTitle.font = Font.systemFont(14)\n      LsecondSubTitle.textColor = Color.white();\n\n      w.addSpacer();\n      let Lheading = w.addText(QuotationsData.content.text);\n      Lheading.font = Font.systemFont(20);\n      Lheading.textColor = themes_Fontcolor;\n      Lheading.centerAlignText();\n      Lheading.shadowColor = themes_Maincolor;\n      Lheading.minimumScaleFactor = 0.5;\n\n      w.addSpacer();\n\n      const LfooterStack = w.addStack();\n      LfooterStack.bottomAlignContent();\n\n      const LprofileStack = LfooterStack.addStack();\n      LprofileStack.topAlignContent();\n\n      const Limage = await getImageByUrl(\n        avatar,\n        `_${Script.name()}-avagr-bg`,\n        false\n      );\n      let LprofileImage = LprofileStack.addImage(Limage);\n\n      LprofileImage.imageSize = new Size(40, 40);\n      LprofileImage.cornerRadius = 20;\n      LprofileImage.borderWidth = 4;\n      LprofileImage.borderColor = new Color(\"#bfbfbf\");\n\n      LprofileStack.addSpacer(10);\n\n      const LnameStack = LprofileStack.addStack();\n      LnameStack.layoutVertically();\n\n      const Lusername = LnameStack.addText(QuotationsData.title);\n      Lusername.textColor = Color.red();\n      Lusername.font = Font.lightSystemFont(14);\n      Lusername.lineLimit = 1;\n      LnameStack.addSpacer(5);\n      const Ltaglist = LnameStack.addText(QuotationsData.desc);\n      Ltaglist.textColor = new Color(\"#bfbfbf\");\n      Ltaglist.font = Font.semiboldSystemFont(10);\n      Lusername.lineLimit = 1;\n      LfooterStack.addSpacer();\n      if (SFSymbolmodel) {\n        let LdocsSymbol = SFSymbol.named(\"figure.wave\"); \/\/tortoise.fill\n        let LdocsElement = LfooterStack.addImage(LdocsSymbol.image);\n        LdocsElement.imageSize = new Size(30, 30);\n        LdocsElement.tintColor = Color.dynamic(Color.red(), Color.white());\n      } else {\n        const LdevLogos = await getImageByUrl(\n          corner,\n          `_${Script.name()}-avagrtop-bg`,\n          false\n        );\n        const Llogo = LfooterStack.addImage(LdevLogos);\n        Llogo.imageSize = new Size(30, 30);\n      }\n      break;\n    default:\n      throw new Error(\"Invalid widget size\");\n  }\n\n  return w;\n}\n\n\/\/#####################事务逻辑处理模块#####################\n\nasync function getData() {\n  const QuotationsCachePath = files.joinPath(\n    files.documentsDirectory(),\n    \"Quotations-NK\"\n  );\n  var QuotationsData;\n  try {\n    QuotationsData = await new Request(\n      atob(\"aHR0cHM6Ly9hcGkubmt1cHAuY29tL3F1b3RhdGlvbnM=\")).loadJSON(),\n      files.writeString(QuotationsCachePath, JSON.stringify(QuotationsData)),\n      console.log(\"[+]获取毛主席语录成功\")\n  } catch (e) {\n    QuotationsData = JSON.parse(files.readString(QuotationsCachePath));\n    console.log(\"[+]获取毛主席语录失败，使用缓存数据\");\n  }\n\n  return QuotationsData;\n}\n\n\/\/#####################背景模块-逻辑处理部分#####################\n\nasync function shadowImage(img) {\n  let ctx = new DrawContext();\n  \/\/ 把画布的尺寸设置成图片的尺寸\n  ctx.size = img.size;\n  \/\/ 把图片绘制到画布中\n  ctx.drawImageInRect(\n    img,\n    new Rect(0, 0, img.size[\"width\"], img.size[\"height\"])\n  );\n  \/\/ 设置绘制的图层颜色，为半透明的黑色\n  ctx.setFillColor(new Color(\"#000000\", 0.5));\n  \/\/ 绘制图层\n  ctx.fillRect(new Rect(0, 0, img.size[\"width\"], img.size[\"height\"]));\n\n  \/\/ 导出最终图片\n  return await ctx.getImage();\n}\n\nasync function generateAlert(message, options) {\n  let alert = new Alert();\n  alert.message = message;\n\n  for (const option of options) {\n    alert.addAction(option);\n  }\n\n  let response = await alert.presentAlert();\n  return response;\n}\n\n\/\/ Crop an image into the specified rect.\nfunction cropImage(img, rect) {\n  let draw = new DrawContext();\n  draw.size = new Size(rect.width, rect.height);\n  draw.drawImageAtPoint(img, new Point(-rect.x, -rect.y));\n  return draw.getImage();\n}\n\n\/\/ **\n\/\/  * 图片高斯模糊\n\/\/  * @param {Image} img\n\/\/  * @param {string} style light\/dark\n\/\/  * @return {Image} 图片\n\/\/  *\/\nasync function blurImage(img, style, blur = blursize) {\n  const js = `\n  var mul_table=[512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,446,437,428,420,412,404,396,388,381,374,367,360,354,347,341,335,329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,332,329,326,323,320,318,315,312,310,307,304,302,299,297,294,292,289,287,285,282,280,278,275,273,271,269,267,265,263,261,259];var shg_table=[9,11,12,13,13,14,14,15,15,15,15,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24];function stackBlurCanvasRGB(id,top_x,top_y,width,height,radius){if(isNaN(radius)||radius<1)return;radius|=0;var canvas=document.getElementById(id);var context=canvas.getContext(\"2d\");var imageData;try{try{imageData=context.getImageData(top_x,top_y,width,height)}catch(e){try{netscape.security.PrivilegeManager.enablePrivilege(\"UniversalBrowserRead\");imageData=context.getImageData(top_x,top_y,width,height)}catch(e){alert(\"Cannot access local image\");throw new Error(\"unable to access local image data: \"+e);return}}}catch(e){alert(\"Cannot access image\");throw new Error(\"unable to access image data: \"+e);}var pixels=imageData.data;var x,y,i,p,yp,yi,yw,r_sum,g_sum,b_sum,r_out_sum,g_out_sum,b_out_sum,r_in_sum,g_in_sum,b_in_sum,pr,pg,pb,rbs;var div=radius+radius+1;var w4=width<<2;var widthMinus1=width-1;var heightMinus1=height-1;var radiusPlus1=radius+1;var sumFactor=radiusPlus1*(radiusPlus1+1)\/2;var stackStart=new BlurStack();var stack=stackStart;for(i=1;i<div;i++){stack=stack.next=new BlurStack();if(i==radiusPlus1)var stackEnd=stack}stack.next=stackStart;var stackIn=null;var stackOut=null;yw=yi=0;var mul_sum=mul_table[radius];var shg_sum=shg_table[radius];for(y=0;y<height;y++){r_in_sum=g_in_sum=b_in_sum=r_sum=g_sum=b_sum=0;r_out_sum=radiusPlus1*(pr=pixels[yi]);g_out_sum=radiusPlus1*(pg=pixels[yi+1]);b_out_sum=radiusPlus1*(pb=pixels[yi+2]);r_sum+=sumFactor*pr;g_sum+=sumFactor*pg;b_sum+=sumFactor*pb;stack=stackStart;for(i=0;i<radiusPlus1;i++){stack.r=pr;stack.g=pg;stack.b=pb;stack=stack.next}for(i=1;i<radiusPlus1;i++){p=yi+((widthMinus1<i?widthMinus1:i)<<2);r_sum+=(stack.r=(pr=pixels[p]))*(rbs=radiusPlus1-i);g_sum+=(stack.g=(pg=pixels[p+1]))*rbs;b_sum+=(stack.b=(pb=pixels[p+2]))*rbs;r_in_sum+=pr;g_in_sum+=pg;b_in_sum+=pb;stack=stack.next}stackIn=stackStart;stackOut=stackEnd;for(x=0;x<width;x++){pixels[yi]=(r_sum*mul_sum)>>shg_sum;pixels[yi+1]=(g_sum*mul_sum)>>shg_sum;pixels[yi+2]=(b_sum*mul_sum)>>shg_sum;r_sum-=r_out_sum;g_sum-=g_out_sum;b_sum-=b_out_sum;r_out_sum-=stackIn.r;g_out_sum-=stackIn.g;b_out_sum-=stackIn.b;p=(yw+((p=x+radius+1)<widthMinus1?p:widthMinus1))<<2;r_in_sum+=(stackIn.r=pixels[p]);g_in_sum+=(stackIn.g=pixels[p+1]);b_in_sum+=(stackIn.b=pixels[p+2]);r_sum+=r_in_sum;g_sum+=g_in_sum;b_sum+=b_in_sum;stackIn=stackIn.next;r_out_sum+=(pr=stackOut.r);g_out_sum+=(pg=stackOut.g);b_out_sum+=(pb=stackOut.b);r_in_sum-=pr;g_in_sum-=pg;b_in_sum-=pb;stackOut=stackOut.next;yi+=4}yw+=width}for(x=0;x<width;x++){g_in_sum=b_in_sum=r_in_sum=g_sum=b_sum=r_sum=0;yi=x<<2;r_out_sum=radiusPlus1*(pr=pixels[yi]);g_out_sum=radiusPlus1*(pg=pixels[yi+1]);b_out_sum=radiusPlus1*(pb=pixels[yi+2]);r_sum+=sumFactor*pr;g_sum+=sumFactor*pg;b_sum+=sumFactor*pb;stack=stackStart;for(i=0;i<radiusPlus1;i++){stack.r=pr;stack.g=pg;stack.b=pb;stack=stack.next}yp=width;for(i=1;i<=radius;i++){yi=(yp+x)<<2;r_sum+=(stack.r=(pr=pixels[yi]))*(rbs=radiusPlus1-i);g_sum+=(stack.g=(pg=pixels[yi+1]))*rbs;b_sum+=(stack.b=(pb=pixels[yi+2]))*rbs;r_in_sum+=pr;g_in_sum+=pg;b_in_sum+=pb;stack=stack.next;if(i<heightMinus1){yp+=width}}yi=x;stackIn=stackStart;stackOut=stackEnd;for(y=0;y<height;y++){p=yi<<2;pixels[p]=(r_sum*mul_sum)>>shg_sum;pixels[p+1]=(g_sum*mul_sum)>>shg_sum;pixels[p+2]=(b_sum*mul_sum)>>shg_sum;r_sum-=r_out_sum;g_sum-=g_out_sum;b_sum-=b_out_sum;r_out_sum-=stackIn.r;g_out_sum-=stackIn.g;b_out_sum-=stackIn.b;p=(x+(((p=y+radiusPlus1)<heightMinus1?p:heightMinus1)*width))<<2;r_sum+=(r_in_sum+=(stackIn.r=pixels[p]));g_sum+=(g_in_sum+=(stackIn.g=pixels[p+1]));b_sum+=(b_in_sum+=(stackIn.b=pixels[p+2]));stackIn=stackIn.next;r_out_sum+=(pr=stackOut.r);g_out_sum+=(pg=stackOut.g);b_out_sum+=(pb=stackOut.b);r_in_sum-=pr;g_in_sum-=pg;b_in_sum-=pb;stackOut=stackOut.next;yi+=width}}context.putImageData(imageData,top_x,top_y)}function BlurStack(){this.r=0;this.g=0;this.b=0;this.a=0;this.next=null}\n        \/\/ https:\/\/gist.github.com\/mjackson\/5311256\n      \n        function rgbToHsl(r, g, b){\n            r \/= 255, g \/= 255, b \/= 255;\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\n            var h, s, l = (max + min) \/ 2;\n      \n            if(max == min){\n                h = s = 0; \/\/ achromatic\n            }else{\n                var d = max - min;\n                s = l > 0.5 ? d \/ (2 - max - min) : d \/ (max + min);\n                switch(max){\n                    case r: h = (g - b) \/ d + (g < b ? 6 : 0); break;\n                    case g: h = (b - r) \/ d + 2; break;\n                    case b: h = (r - g) \/ d + 4; break;\n                }\n                h \/= 6;\n            }\n      \n            return [h, s, l];\n        }\n      \n        function hslToRgb(h, s, l){\n            var r, g, b;\n      \n            if(s == 0){\n                r = g = b = l; \/\/ achromatic\n            }else{\n                var hue2rgb = function hue2rgb(p, q, t){\n                    if(t < 0) t += 1;\n                    if(t > 1) t -= 1;\n                    if(t < 1\/6) return p + (q - p) * 6 * t;\n                    if(t < 1\/2) return q;\n                    if(t < 2\/3) return p + (q - p) * (2\/3 - t) * 6;\n                    return p;\n                }\n      \n                var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n                var p = 2 * l - q;\n                r = hue2rgb(p, q, h + 1\/3);\n                g = hue2rgb(p, q, h);\n                b = hue2rgb(p, q, h - 1\/3);\n            }\n      \n            return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n        }\n        \n        function lightBlur(hsl) {\n        \n          \/\/ Adjust the luminance.\n          let lumCalc = 0.35 + (0.3 \/ hsl[2]);\n          if (lumCalc < 1) { lumCalc = 1; }\n          else if (lumCalc > 3.3) { lumCalc = 3.3; }\n          const l = hsl[2] * lumCalc;\n          \n          \/\/ Adjust the saturation. \n          const colorful = 2 * hsl[1] * l;\n          const s = hsl[1] * colorful * 1.5;\n          \n          return [hsl[0],s,l];\n          \n        }\n        \n        function darkBlur(hsl) {\n      \n          \/\/ Adjust the saturation. \n          const colorful = 2 * hsl[1] * hsl[2];\n          const s = hsl[1] * (1 - hsl[2]) * 3;\n          \n          return [hsl[0],s,hsl[2]];\n          \n        }\n      \n        \/\/ Set up the canvas.\n        const img = document.getElementById(\"blurImg\");\n        const canvas = document.getElementById(\"mainCanvas\");\n      \n        const w = img.naturalWidth;\n        const h = img.naturalHeight;\n      \n        canvas.style.width  = w + \"px\";\n        canvas.style.height = h + \"px\";\n        canvas.width = w;\n        canvas.height = h;\n      \n        const context = canvas.getContext(\"2d\");\n        context.clearRect( 0, 0, w, h );\n        context.drawImage( img, 0, 0 );\n        \n        \/\/ Get the image data from the context.\n        var imageData = context.getImageData(0,0,w,h);\n        var pix = imageData.data;\n        \n        var isDark = \"${style}\" == \"dark\";\n        var imageFunc = isDark ? darkBlur : lightBlur;\n      \n        for (let i=0; i < pix.length; i+=4) {\n      \n          \/\/ Convert to HSL.\n          let hsl = rgbToHsl(pix[i],pix[i+1],pix[i+2]);\n          \n          \/\/ Apply the image function.\n          hsl = imageFunc(hsl);\n        \n          \/\/ Convert back to RGB.\n          const rgb = hslToRgb(hsl[0], hsl[1], hsl[2]);\n        \n          \/\/ Put the values back into the data.\n          pix[i] = rgb[0];\n          pix[i+1] = rgb[1];\n          pix[i+2] = rgb[2];\n      \n        }\n      \n        \/\/ Draw over the old image.\n        context.putImageData(imageData,0,0);\n      \n        \/\/ Blur the image.\n        stackBlurCanvasRGB(\"mainCanvas\", 0, 0, w, h, ${blur});\n        \n        \/\/ Perform the additional processing for dark images.\n        if (isDark) {\n        \n          \/\/ Draw the hard light box over it.\n          context.globalCompositeOperation = \"hard-light\";\n          context.fillStyle = \"rgba(55,55,55,0.2)\";\n          context.fillRect(0, 0, w, h);\n      \n          \/\/ Draw the soft light box over it.\n          context.globalCompositeOperation = \"soft-light\";\n          context.fillStyle = \"rgba(55,55,55,1)\";\n          context.fillRect(0, 0, w, h);\n      \n          \/\/ Draw the regular box over it.\n          context.globalCompositeOperation = \"source-over\";\n          context.fillStyle = \"rgba(55,55,55,0.4)\";\n          context.fillRect(0, 0, w, h);\n        \n        \/\/ Otherwise process light images.\n        } else {\n          context.fillStyle = \"rgba(255,255,255,0.4)\";\n          context.fillRect(0, 0, w, h);\n        }\n      \n        \/\/ Return a base64 representation.\n        canvas.toDataURL(); \n        `;\n\n  \/\/ Convert the images and create the HTML.\n  let blurImgData = Data.fromPNG(img).toBase64String();\n  let html = `\n        <img id=\"blurImg\" src=\"data:image\/png;base64,${blurImgData}\" \/>\n        <canvas id=\"mainCanvas\" \/>\n        `;\n\n  \/\/ Make the web view and get its return value.\n  let view = new WebView();\n  await view.loadHTML(html);\n  let returnValue = await view.evaluateJavaScript(js);\n\n  \/\/ Remove the data type from the string and convert to data.\n  let imageDataString = returnValue.slice(22);\n  let imageData = Data.fromBase64String(imageDataString);\n\n  \/\/ Convert to image and crop before returning.\n  let imageFromData = Image.fromData(imageData);\n  \/\/ return cropImage(imageFromData)\n  return imageFromData;\n}\n\nasync function getImageByUrl(url, cacheKey, useCache = true) {\n  const cacheFile = FileManager.local().joinPath(\n    FileManager.local().temporaryDirectory(),\n    cacheKey\n  );\n  const exists = FileManager.local().fileExists(cacheFile);\n  \/\/ 判断是否有缓存\n  if (useCache && exists) {\n    return Image.fromFile(cacheFile);\n  }\n  try {\n    const req = new Request(url);\n    const img = await req.loadImage();\n    \/\/ 存储到缓存\n    FileManager.local().writeImage(cacheFile, img);\n    return img;\n  } catch (e) {\n    console.error(`图片加载失败：${e}`);\n    if (exists) {\n      return Image.fromFile(cacheFile);\n    }\n    \/\/ 没有缓存+失败情况下，返回黑色背景\n    let ctx = new DrawContext();\n    ctx.size = new Size(100, 100);\n    ctx.setFillColor(Color.black());\n    ctx.fillRect(new Rect(0, 0, 100, 100));\n    return await ctx.getImage();\n  }\n}\n\n\/\/ Pixel sizes and positions for widgets on all supported phones.\nfunction phoneSizes() {\n  let phones = {\n    2796: {\n      models: [\"14 Pro Max\"],\n      小号: 510,\n      中号: 1092,\n      大号: 1146,\n      左边: 99,\n      右边: 681,\n      顶部: 282,\n      中间: 918,\n      底部: 1554,\n    },\n    2556: {\n      models: [\"14 Pro\"],\n      小号: 474,\n      中号: 1014,\n      大号: 1062,\n      左边: 82,\n      右边: 622,\n      顶部: 270,\n      中间: 858,\n      底部: 1446,\n    },\n    2532: {\n      models: [\"12\", \"12 Pro\", \"14\"],\n      小号: 474,\n      中号: 1014,\n      大号: 1062,\n      左边: 78,\n      右边: 618,\n      顶部: 231,\n      中间: 819,\n      底部: 1407,\n    },\n\n    2778: {\n      models: [\"12 Pro Max\", \"13 Pro Max\"],\n      小号: 510,\n      中号: 1092,\n      大号: 1146,\n      左边: 96,\n      右边: 678,\n      顶部: 246,\n      中间: 882,\n      底部: 1518,\n    },\n\n    2688: {\n      models: [\"Xs Max\", \"11 Pro Max\"],\n      小号: 507,\n      中号: 1080,\n      大号: 1137,\n      左边: 81,\n      右边: 654,\n      顶部: 228,\n      中间: 858,\n      底部: 1488,\n    },\n\n    1792: {\n      models: [\"11\", \"Xr\"],\n      小号: 338,\n      中号: 720,\n      大号: 758,\n      左边: 54,\n      右边: 436,\n      顶部: 160,\n      中间: 580,\n      底部: 1000,\n    },\n\n    2436: {\n      x: {\n        models: [\"X\", \"Xs\", \"11 Pro\"],\n        小号: 465,\n        中号: 987,\n        大号: 1035,\n        左边: 69,\n        右边: 591,\n        顶部: 213,\n        中间: 783,\n        底部: 1353,\n      },\n\n      mini: {\n        models: [\"12 mini\"],\n        小号: 465,\n        中号: 987,\n        大号: 1035,\n        左边: 69,\n        右边: 591,\n        顶部: 231,\n        中间: 801,\n        底部: 1371,\n      },\n    },\n\n    2208: {\n      models: [\"6+\", \"6s+\", \"7+\", \"8+\"],\n      小号: 471,\n      中号: 1044,\n      大号: 1071,\n      左边: 99,\n      右边: 672,\n      顶部: 114,\n      中间: 696,\n      底部: 1278,\n    },\n\n    1334: {\n      models: [\"6\", \"6s\", \"7\", \"8\", \"SE2\"],\n      小号: 296,\n      中号: 642,\n      大号: 648,\n      左边: 54,\n      右边: 400,\n      顶部: 60,\n      中间: 412,\n      底部: 764,\n    },\n\n    1136: {\n      models: [\"5\", \"5s\", \"5c\", \"SE\"],\n      小号: 282,\n      中号: 584,\n      大号: 622,\n      左边: 30,\n      右边: 332,\n      顶部: 59,\n      中间: 399,\n      底部: 399,\n    },\n  };\n  return phones;\n}\n\n\/\/#####################版本更新模块#####################\n\nasync function getversion() {\n  const versionCachePath = files.joinPath(\n    files.documentsDirectory(),\n    \"version-NK\"\n  );\n  var versionData;\n  try {\n    versionData = await new Request(\n      atob(\n        \"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL05pY29sYXNraW5nMDA3L0NETkBsYXRlc3QvU2NyaXB0YWJsZS9VUERBVEUuanNvbg==\"\n      )\n    ).loadJSON();\n    files.writeString(versionCachePath, JSON.stringify(versionData));\n    console.log(`===>欢迎使用：${versionData.author}制作的小组件<===`);\n    console.log(\"[+]遇到问题，请前往公众号：曰坛 反馈\");\n    log(\"[+]版本信息获取成功\");\n  } catch (e) {\n    versionData = JSON.parse(files.readString(versionCachePath));\n    log(\"[+]获取版本信息失败，使用缓存数据\");\n  }\n\n  return versionData;\n}\n\n\/\/ 版本比较\nfunction version_compare(v1, v2) {\n  \/\/ 将两个版本号拆成数组\n  var arr1 = v1.split(\".\"),\n    arr2 = v2.split(\".\");\n  var minLength = Math.min(arr1.length, arr2.length);\n  \/\/ 依次比较版本号每一位大小\n  for (var i = 0; i < minLength; i++) {\n    if (parseInt(arr1[i]) != parseInt(arr2[i])) {\n      return parseInt(arr1[i]) > parseInt(arr2[i]) ? 1 : -1;\n    }\n  }\n  \/\/ 若前几位分隔相同，则按分隔数比较。\n  if (arr1.length == arr2.length) {\n    return 0;\n  } else {\n    return arr1.length > arr2.length ? 1 : -1;\n  }\n}\n\nasync function updateCheck(localversion) {\n  let uC = versionData;\n  let originversion = uC[\"ONE-Quotations\"].version;\n  let status = version_compare(originversion, localversion);\n  log(\"[+]最新版本：\" + originversion);\n  let needUpdate = false;\n  if (status == 1) {\n    needUpdate = true;\n    log(\"[+]检测到有新版本！\");\n    if (!config.runsInWidget) {\n      log(\"[+]执行更新步骤\");\n      let upd = new Alert();\n      upd.title = \"检测到有新版本！\";\n      upd.addDestructiveAction(\"暂不更新\");\n      upd.addAction(\"立即更新\");\n      upd.add;\n      upd.message = uC[\"ONE-Quotations\"].notes;\n      if ((await upd.present()) == 1) {\n        const req = new Request(uC[\"ONE-Quotations\"].cdn_scriptURL);\n        const codeString = await req.loadString();\n        files.writeString(module.filename, codeString);\n        const n = new Notification();\n        n.title = \"下载更新成功\";\n        n.body = \"请点击左上角Done完成，重新进入脚本即可~\";\n        n.schedule();\n      }\n      Script.complete();\n    }\n  } else if (status == 0) {\n    log(\"[+]当前版本已是最新\");\n  } else {\n    const n = new Notification();\n    n.title = \"作者肯定是打瞌睡啦！\";\n    n.body = \"哎呀！赶紧去公众号反馈吧~\";\n    n.schedule();\n  }\n\n  return needUpdate;\n}\n\n\/********************************************************\n ************* MAKE SURE TO COPY EVERYTHING *************\n *******************************************************\n ************ © 2024 Copyright Nicolas-kings ************\/\n",
  "share_sheet_inputs" : [

  ]
}